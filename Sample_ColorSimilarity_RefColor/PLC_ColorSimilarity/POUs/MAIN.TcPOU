<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="MAIN" Id="{443add09-92e4-4bbd-bfa0-6804e9d12cf9}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR	
	hr					:	HRESULT;
	
	fbCamera			:	FB_VN_SimpleCameraControl;
	eState				:	ETcVnCameraState;
	
	// Images
	ipImageIn			:	ITcVnImage;
	ipImageInDisp		:	ITcVnDisplayableImage;
	
	ipImageWork			:	ITcVnImage;
	ipImageWorkCol		:	ARRAY [0..2] OF ITcVnImage;
	ipImageWorkColDisp	:	ARRAY [0..2] OF ITcVnDisplayableImage;
	
	ipImageRes			:	ITcVnImage;
	ipImageResDisp		:	ITcVnDisplayableImage;
	
	// COLOR
	iColor				:	INT;
	aColorTxt			:	ARRAY[0..2] OF STRING 				:= [	'RED',			'GREEN', 		'BLUE'			];
	aColor				:	ARRAY[0..2] OF TcVnVector4_LREAL	:= [	[150, 0, 0],	[0, 255, 0],	[0, 0, 255]		];
	aColorRef			:	ARRAY[0..2] OF TcVnVector3_LREAL 	:= [	[255, 75, 60], 	[40, 140, 95],	[40, 140, 190]	];

	// Contours
	ipContourList		:	ITcVnContainer;
	ipIterator			:	ITcVnForwardIterator;
	aOffset				:	TcVnPoint;
	ipContour			:	ITcVnContainer;
	fArea				:	LREAL;
	aCenter				:	TcVnPoint2_LREAL;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//	Disclaimer
  	
//	THIS publication contains statements about the suitability OF our products FOR certain 
//	areas OF application. These statements are based on typical features OF our products. 
//	The examples shown in THIS publication are FOR demonstration purposes only. The 
//	information provided herein should NOT be regarded as specific operation characteristics. 
//	It is incumbent on the customer TO check AND decide whether a product is suitable FOR use 
//	in a particular application. We DO NOT give ANY warranty that the source code which is 
//	made available with this publication is complete or accurate. 
  	
//	THE SAMPLE CODE CONTAINED IN THIS PUBLICATION IS PROVIDED “AS IS” WITHOUT WARRANTY OF ANY 
//	KIND, EITHER EXPRESSED, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION, ANY WARRANTY 
//	WITH RESPECT TO NON-INFRINGEMENT, FREEDOM FROM PROPRIETARY RIGHTS OF THIRD PARTIES OR 
//	FITNESS FOR ANY PARTICULAR PURPOSE. 
  	
//	THIS publication may be changed FROM TIME TO TIME without prior notice. No liability 
//	is assumed FOR errors AND/OR omissions. Our products are described in detail in our 
//	data sheets AND documentations. Product-specific warnings AND cautions must be observed. 
//	FOR the latest version OF our data sheets AND documentations visit our website 
//	(www.beckhoff.de). 
  	
//	© Beckhoff Automation GmbH & Co. KG, March 2020
  	
//	The reproduction, distribution AND utilization OF THIS document as well as the 
//	communication OF its contents TO others without express authorization is prohibited. 
//	Offenders will be held liable FOR the payment OF damages. All rights reserved in the 
//	event of the grant of a patent, utility model or design.
  	
//	-----------------------------------------------------------------------------------------

//	SAMPLE - CHECK COLOR RANGE
//	============================
  	
//	Steps To Do:
//	-------------
//	1. Add the images to the FileSource1


eState := fbCamera.GetState();

CASE eState OF

TCVN_CS_INITIAL, TCVN_CS_OPENING, TCVN_CS_OPENED, TCVN_CS_STARTACQUISITION:
	hr := fbCamera.StartAcquisition();

TCVN_CS_ACQUIRING:
	hr := fbCamera.GetCurrentImage(ipImageIn);	
	
	IF SUCCEEDED(hr) AND ipImageIn <> 0 THEN
		
		// Display Input Image
		hr := F_VN_CopyIntoDisplayableImage(ipImageIn, ipImageInDisp, hr);
		
		// Attention: With other images another color space transformation could be necessary
		hr := F_VN_ConvertColorSpace(ipImageIn, ipImageWork, TCVN_CST_Bayer_RG_TO_RGB, hr);
		hr := F_VN_CopyImage(ipImageWork, ipImageRes, hr);
		
		FOR iColor := 0 TO 2 DO
			
			// Compute the Color Similarity to a Reference Color
			hr := F_VN_ReferenceColorSimilarityExp_TcVnVector3_LREAL(
					ipSrcImage			:= ipImageWork,
					ipDestImage			:= ipImageWorkCol[iColor],
					aRefColor			:= aColorRef[iColor],
					fVariance			:= 0.1,
					fLuminanceWeight	:= 0.2,
					hrPrev				:= hr
					
			);
						
			// Display effect of the Color-Similarity-Function 
			hr := F_VN_CopyIntoDisplayableImage(ipImageWorkCol[iColor], ipImageWorkColDisp[iColor], hr);
			
			hr := F_VN_Threshold(ipImageWorkCol[iColor], ipImageWorkCol[iColor], 200, 255, TCVN_TT_Binary, hr);
			
			// Find all objects / contours in the black and white image
			hr := F_VN_FindContours(ipImageWorkCol[iColor], ipContourList, hr);	
			hr := F_VN_GetForwardIterator(ipContourList, ipIterator, hr);

			// Filter the objects by size and draw the contours 
			WHILE SUCCEEDED(hr) AND_THEN ipIterator.CheckIfEnd() <> S_OK DO
				hr := F_VN_GetContainer(ipIterator, ipContour, hr);
				hr := F_VN_IncrementIterator(ipIterator, hr);
				
				// Filter contours by size
				hr := F_VN_ContourArea(ipContour, fArea, hr);				
				IF fArea > 5000 THEN	
					
					// Draw Results into an Image				
					hr := F_VN_DrawContours(ipContour, -1, ipImageRes, aColor[iColor], 3, hr);
					hr := F_VN_ContourCenterOfMass(ipContour, aCenter, hr);
					hr := F_VN_PutText(aColorTxt[iColor], ipImageRes, LREAL_TO_UDINT(aCenter[0])-30, LREAL_TO_UDINT(aCenter[1])+10, TCVN_FT_HERSHEY_PLAIN, 2, aColor[iColor],hr);
				END_IF
				
			END_WHILE				
			
		END_FOR
		
		// Display Result Image
		hr := F_VN_TransformIntoDisplayableImage(ipImageRes, ipImageResDisp, hr);
	END_IF
	
TCVN_CS_ERROR:
	hr := fbCamera.Reset();	

END_CASE]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="201" Count="27" />
      <LineId Id="199" Count="1" />
      <LineId Id="117" Count="4" />
      <LineId Id="115" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="21" Count="14" />
      <LineId Id="91" Count="2" />
      <LineId Id="90" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="159" Count="6" />
      <LineId Id="44" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="262" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="107" Count="1" />
      <LineId Id="53" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="68" Count="15" />
      <LineId Id="157" Count="0" />
      <LineId Id="85" Count="3" />
      <LineId Id="67" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="36" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>